24p ~ 48p

- 단순 자바파일의 경우 cmd 창에서 javac으로 컴파일하여 실행 할 수 있다.
- java의 경우 자바가 설치된 어떤 환경이든 동일하게 실행 할 수 있다.(높은 이식성)
    - C, C++의 경우 컴파일 하는 프로세스에 따라 정수 타입이 달라지는 경우가 발생

    ex)
    환경	                int	long	long long
    32비트 Windows (MSVC)	4	4	    8
    64비트 Linux (GCC)	    4	8	    8

    즉, 같은 코드라도 운영체제(OS), 컴파일러 종류 (GCC, Clang, MSVC 등), 타겟 아키텍처 (32bit, 64bit) 에 따라 정수 크기가 달라질 수 있다.

- Java에서의 정수 타입 - int, long, short, byte  
    But!!! 정확한 계산이 필요한 경우 BigInteger
- Java에서의 부동 소수점 - float, double 
    But!!! 정확한 계산이 필요한 경우 BigDecimal

- 유니코드 제어문자 (\n, \r, \t, \b)

- 변수를 한줄에서 선언 가능
    ex) int num = 0, test;

- 변수명이 '_' 로 시작하는 경우 내부 참조 변수라는 의미를 내포(이것도 잘 사용하지 않음) '$'는 잘 사용하지 않음 

- 논리연산자 &&와 ||의 경우 오류를 예방하기 위한 코드로 사용 가능
    ex) n != 0 && 100 / n ----> 여기서 n이 0 인 경우 100/n은 오류가 발생하므로 방어코드로 사용 가능

- 문자열을 합치는 경우 + 과 StringBuilder의 차이는 + 경우 더해진 문자열을 계속 String pool에 생성하여 메모리를 차지하지만
StringBuilder의 경우 Char 가변 배열을 사용함으로 메모리를 효율적으로 사용 할 수 있다.

